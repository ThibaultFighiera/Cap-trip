apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion versions.compileSdk

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(path: ':domain')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Core
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.annotation:annotation:$annotation"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Arch component
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.arch_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_ktx"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "com.google.android.material:material:$material"

    // Dependency Injection
    implementation "org.koin:koin-android:$koin_version"
    // Koin AndroidX Scope feature
    implementation "org.koin:koin-androidx-scope:$koin_version"
    // Koin AndroidX ViewModel feature
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso"

    // Asynchronicity
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    testImplementation "junit:junit:$test_versions.junit"
    testImplementation("org.mockito:mockito-inline:$test_versions.mockito_core")
    androidTestImplementation "androidx.test.ext:junit:$test_versions.xJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$test_versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$test_versions.espresso"
}

androidExtensions {
    experimental = true
}
